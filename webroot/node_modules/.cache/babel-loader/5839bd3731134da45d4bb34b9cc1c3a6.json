{"ast":null,"code":"import _classCallCheck from \"/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/src/App.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport ModalForm from './Components/Modals/Modal';\nimport DataTable from './Components/Tables/DataTable';\nimport { CSVLink } from \"react-csv\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      items: []\n    };\n\n    _this.addItemToState = function (item) {\n      _this.getItems();\n\n      _this.setState(function (prevState) {\n        return {\n          items: _this.items\n        };\n      });\n    };\n\n    _this.updateState = function (item) {\n      //    const itemIndex = this.state.items.findIndex(data => data.id === item.id)\n      //    const newArray = [\n      //    // destructure all items from beginning to the indexed item\n      //      ...this.state.items.slice(0, itemIndex),\n      //    // add the updated item to the array\n      //      item,\n      //    // add the rest of the items to the array from the index after the replaced item\n      //      ...this.state.items.slice(itemIndex + 1)\n      //    ]\n      //    this.setState({ items: newArray })\n      console.log(item);\n\n      _this.getItems();\n\n      _this.setState({\n        items: _this.items\n      });\n\n      window.location.reload(false);\n    };\n\n    _this.deleteItemFromState = function (name) {\n      while (_this.statusNone) {\n        _this.getItems();\n\n        window.location.reload(false);\n        console.log('getting items');\n      } //    const updatedItems = this.state.items.filter(item => item.name !== name)\n\n\n      _this.setState({\n        items: _this.state.items\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"getItems\",\n    value: function getItems() {\n      var _this2 = this;\n\n      fetch('/service').then(function (response) {\n        return response.json();\n      }).then(function (items) {\n        return _this2.setState({\n          items: items\n        });\n      }).then(function (items) {\n        return console.log(items);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"statusNone\",\n    value: function statusNone() {\n      if (this.items[0].status == \"\") {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getItems();\n      setInterval(this.getItems, 1000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          margin: \"20px 0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"KRY Service Poller\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(DataTable, {\n        items: this.state.items,\n        updateState: this.updateState,\n        deleteItemFromState: this.deleteItemFromState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(ModalForm, {\n        buttonLabel: \"Add Item\",\n        addItemToState: this.addItemToState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/src/App.js"],"names":["React","Component","Container","Row","Col","ModalForm","DataTable","CSVLink","App","state","items","addItemToState","item","getItems","setState","prevState","updateState","console","log","window","location","reload","deleteItemFromState","name","statusNone","fetch","then","response","json","catch","err","status","setInterval","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Container, Row, Col } from 'reactstrap'\nimport ModalForm from './Components/Modals/Modal'\nimport DataTable from './Components/Tables/DataTable'\nimport { CSVLink } from \"react-csv\"\n\nclass App extends Component {\n  state = {\n    items: []\n  }\n\n  getItems(){\n    fetch('/service')\n      .then(response => response.json())\n      .then(items => this.setState({items}))\n      .then(items => console.log(items))\n      .catch(err => console.log(err))\n  }\n\n  statusNone(){\n  \tif(this.items[0].status == \"\") {\n\t\treturn true\n  \t}\n  \treturn false\n  }\n\n  addItemToState = (item) => {\n  \tthis.getItems()\n    this.setState(prevState => ({\n      items: this.items\n    }))\n  }\n\n  updateState = (item) => {\n//    const itemIndex = this.state.items.findIndex(data => data.id === item.id)\n//    const newArray = [\n//    // destructure all items from beginning to the indexed item\n//      ...this.state.items.slice(0, itemIndex),\n//    // add the updated item to the array\n//      item,\n//    // add the rest of the items to the array from the index after the replaced item\n//      ...this.state.items.slice(itemIndex + 1)\n//    ]\n//    this.setState({ items: newArray })\n\tconsole.log(item)\n    this.getItems()\n    this.setState({ items: this.items })\n    window.location.reload(false);\n  }\n\n  deleteItemFromState = (name) => {\n  \twhile (this.statusNone) {\n  \tthis.getItems()\n  \twindow.location.reload(false);\n  \tconsole.log('getting items')\n  \t}\n\n//    const updatedItems = this.state.items.filter(item => item.name !== name)\n    this.setState({ items: this.state.items })\n  }\n\n  componentDidMount(){\n    this.getItems()\n    setInterval(this.getItems, 1000);\n  }\n\n  render() {\n    return (\n      <Container className=\"App\">\n        <Row>\n          <Col>\n            <h1 style={{margin: \"20px 0\"}}>KRY Service Poller</h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <DataTable items={this.state.items} updateState={this.updateState} deleteItemFromState={this.deleteItemFromState} />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <ModalForm buttonLabel=\"Add Item\" addItemToState={this.addItemToState}/>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}