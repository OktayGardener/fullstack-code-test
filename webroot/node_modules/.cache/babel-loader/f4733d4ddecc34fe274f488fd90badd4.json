{"ast":null,"code":"import _toConsumableArray from \"/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/src/App.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport ModalForm from './Components/Modals/Modal';\nimport DataTable from './Components/Tables/DataTable';\nimport { CSVLink } from \"react-csv\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      items: []\n    };\n\n    _this.addItemToState = function (item) {\n      _this.setState(function (prevState) {\n        return {\n          items: [].concat(_toConsumableArray(prevState.items), [item])\n        };\n      });\n    };\n\n    _this.updateState = function (item) {\n      var itemIndex = _this.state.items.findIndex(function (data) {\n        return data.id === item.id;\n      });\n\n      var newArray = [].concat(_toConsumableArray(_this.state.items.slice(0, itemIndex)), [// add the updated item to the array\n      item], _toConsumableArray(_this.state.items.slice(itemIndex + 1)));\n\n      _this.setState({\n        items: newArray\n      });\n    };\n\n    _this.deleteItemFromState = function (name) {\n      var updatedItems = _this.state.items.filter(function (item) {\n        return item.name !== name;\n      });\n\n      console.log(updatedItems);\n\n      _this.setState({\n        items: updatedItems\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"getItems\",\n    value: function getItems() {\n      var _this2 = this;\n\n      fetch('/service').then(function (response) {\n        return response.json();\n      }).then(function (items) {\n        return _this2.setState({\n          items: items\n        });\n      }).then(function (items) {\n        return console.log(items);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getItems();\n      setInterval(this.getItems, 5000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          margin: \"20px 0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"CRUD Database\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(DataTable, {\n        items: this.state.items,\n        updateState: this.updateState,\n        deleteItemFromState: this.deleteItemFromState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(CSVLink, {\n        filename: \"db.csv\",\n        color: \"primary\",\n        style: {\n          float: \"left\",\n          marginRight: \"10px\"\n        },\n        className: \"btn btn-primary\",\n        data: this.state.items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Download CSV\"), React.createElement(ModalForm, {\n        buttonLabel: \"Add Item\",\n        addItemToState: this.addItemToState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/src/App.js"],"names":["React","Component","Container","Row","Col","ModalForm","DataTable","CSVLink","App","state","items","addItemToState","item","setState","prevState","updateState","itemIndex","findIndex","data","id","newArray","slice","deleteItemFromState","name","updatedItems","filter","console","log","fetch","then","response","json","catch","err","getItems","setInterval","margin","float","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Container, Row, Col } from 'reactstrap'\nimport ModalForm from './Components/Modals/Modal'\nimport DataTable from './Components/Tables/DataTable'\nimport { CSVLink } from \"react-csv\"\n\nclass App extends Component {\n  state = {\n    items: []\n  }\n\n  getItems(){\n    fetch('/service')\n      .then(response => response.json())\n      .then(items => this.setState({items}))\n      .then(items => console.log(items))\n      .catch(err => console.log(err))\n  }\n\n  addItemToState = (item) => {\n    this.setState(prevState => ({\n      items: [...prevState.items, item]\n    }))\n  }\n\n  updateState = (item) => {\n    const itemIndex = this.state.items.findIndex(data => data.id === item.id)\n    const newArray = [\n    // destructure all items from beginning to the indexed item\n      ...this.state.items.slice(0, itemIndex),\n    // add the updated item to the array\n      item,\n    // add the rest of the items to the array from the index after the replaced item\n      ...this.state.items.slice(itemIndex + 1)\n    ]\n    this.setState({ items: newArray })\n  }\n\n  deleteItemFromState = (name) => {\n    const updatedItems = this.state.items.filter(item => item.name !== name)\n    console.log(updatedItems)\n    this.setState({ items: updatedItems })\n  }\n\n  componentDidMount(){\n    this.getItems()\n    setInterval(this.getItems, 5000);\n  }\n\n  render() {\n    return (\n      <Container className=\"App\">\n        <Row>\n          <Col>\n            <h1 style={{margin: \"20px 0\"}}>CRUD Database</h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <DataTable items={this.state.items} updateState={this.updateState} deleteItemFromState={this.deleteItemFromState} />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <CSVLink\n              filename={\"db.csv\"}\n              color=\"primary\"\n              style={{float: \"left\", marginRight: \"10px\"}}\n              className=\"btn btn-primary\"\n              data={this.state.items}>\n              Download CSV\n            </CSVLink>\n            <ModalForm buttonLabel=\"Add Item\" addItemToState={this.addItemToState}/>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}