{"ast":null,"code":"import _classCallCheck from \"/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/src/Components/Modals/Modal.js\";\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport AddEditForm from '../Forms/FormAddEdit';\n\nvar ModalForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ModalForm, _Component);\n\n  function ModalForm(props) {\n    var _this;\n\n    _classCallCheck(this, ModalForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ModalForm).call(this, props));\n\n    _this.toggle = function () {\n      _this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    };\n\n    _this.state = {\n      modal: false\n    };\n    return _this;\n  }\n\n  _createClass(ModalForm, [{\n    key: \"render\",\n    value: function render() {\n      var closeBtn = React.createElement(\"button\", {\n        className: \"close\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"\\xD7\");\n      var label = this.props.buttonLabel;\n      var button = '';\n      var title = '';\n\n      if (label === 'Edit') {\n        button = React.createElement(Button, {\n          color: \"warning\",\n          onClick: this.toggle,\n          style: {\n            float: \"left\",\n            marginRight: \"10px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, label);\n        title = 'Edit Item';\n      } else {\n        button = React.createElement(Button, {\n          color: \"success\",\n          onClick: this.toggle,\n          style: {\n            float: \"left\",\n            marginRight: \"10px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, label);\n        title = 'Add New Item';\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, button, React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggle,\n        close: closeBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, title), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(AddEditForm, {\n        addItemToState: this.props.addItemToState,\n        updateState: this.props.updateState,\n        toggle: this.toggle,\n        item: this.props.item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ModalForm;\n}(Component);\n\nexport default ModalForm;","map":{"version":3,"sources":["/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/src/Components/Modals/Modal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","AddEditForm","ModalForm","props","toggle","setState","prevState","modal","state","closeBtn","label","buttonLabel","button","title","float","marginRight","className","addItemToState","updateState","item"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,QAAsD,YAAtD;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;IAEMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,UAOnBC,MAPmB,GAOV,YAAM;AACb,YAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AAC1BC,UAAAA,KAAK,EAAE,CAACD,SAAS,CAACC;AADQ,SAAL;AAAA,OAAvB;AAGD,KAXkB;;AAEjB,UAAKC,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE;AADI,KAAb;AAFiB;AAKlB;;;;6BAQQ;AACL,UAAME,QAAQ,GAAG;AAAQ,QAAA,SAAS,EAAC,OAAlB;AAA0B,QAAA,OAAO,EAAE,KAAKL,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAjB;AAEA,UAAMM,KAAK,GAAG,KAAKP,KAAL,CAAWQ,WAAzB;AAEA,UAAIC,MAAM,GAAG,EAAb;AACA,UAAIC,KAAK,GAAG,EAAZ;;AAEA,UAAGH,KAAK,KAAK,MAAb,EAAoB;AAClBE,QAAAA,MAAM,GAAG,oBAAC,MAAD;AACC,UAAA,KAAK,EAAC,SADP;AAEC,UAAA,OAAO,EAAE,KAAKR,MAFf;AAGC,UAAA,KAAK,EAAE;AAACU,YAAAA,KAAK,EAAE,MAAR;AAAgBC,YAAAA,WAAW,EAAC;AAA5B,WAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAG8CL,KAH9C,CAAT;AAKAG,QAAAA,KAAK,GAAG,WAAR;AACD,OAPD,MAOO;AACLD,QAAAA,MAAM,GAAG,oBAAC,MAAD;AACC,UAAA,KAAK,EAAC,SADP;AAEC,UAAA,OAAO,EAAE,KAAKR,MAFf;AAGC,UAAA,KAAK,EAAE;AAACU,YAAAA,KAAK,EAAE,MAAR;AAAgBC,YAAAA,WAAW,EAAC;AAA5B,WAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAG8CL,KAH9C,CAAT;AAKAG,QAAAA,KAAK,GAAG,cAAR;AACD;;AAGD,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,MADH,EAEE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWD,KAA1B;AAAiC,QAAA,MAAM,EAAE,KAAKH,MAA9C;AAAsD,QAAA,SAAS,EAAE,KAAKD,KAAL,CAAWa,SAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAE,KAAKZ,MAA1B;AAAkC,QAAA,KAAK,EAAEK,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoDI,KAApD,CADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AACE,QAAA,cAAc,EAAE,KAAKV,KAAL,CAAWc,cAD7B;AAEE,QAAA,WAAW,EAAE,KAAKd,KAAL,CAAWe,WAF1B;AAGE,QAAA,MAAM,EAAE,KAAKd,MAHf;AAIE,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWgB,IAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,CAFF,CADA;AAeH;;;;EAtDqBvB,S;;AAyDxB,eAAeM,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap'\nimport AddEditForm from '../Forms/FormAddEdit'\n\nclass ModalForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      modal: false\n    }\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }))\n  }\n\n  render() {\n      const closeBtn = <button className=\"close\" onClick={this.toggle}>&times;</button>\n\n      const label = this.props.buttonLabel\n\n      let button = ''\n      let title = ''\n\n      if(label === 'Edit'){\n        button = <Button\n                  color=\"warning\"\n                  onClick={this.toggle}\n                  style={{float: \"left\", marginRight:\"10px\"}}>{label}\n                </Button>\n        title = 'Edit Item'\n      } else {\n        button = <Button\n                  color=\"success\"\n                  onClick={this.toggle}\n                  style={{float: \"left\", marginRight:\"10px\"}}>{label}\n                </Button>\n        title = 'Add New Item'\n      }\n\n\n      return (\n      <div>\n        {button}\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n          <ModalHeader toggle={this.toggle} close={closeBtn}>{title}</ModalHeader>\n          <ModalBody>\n            <AddEditForm\n              addItemToState={this.props.addItemToState}\n              updateState={this.props.updateState}\n              toggle={this.toggle}\n              item={this.props.item} />\n          </ModalBody>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default ModalForm"]},"metadata":{},"sourceType":"module"}