{"ast":null,"code":"import _defineProperty from \"/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/src/Components/Forms/FormAddEdit.js\";\nimport React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nvar AddEditForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddEditForm, _React$Component);\n\n  function AddEditForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddEditForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddEditForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: '',\n      url: ''\n    };\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.submitFormAdd = function (e) {\n      e.preventDefault();\n      fetch('/service', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: _this.state.name,\n          url: _this.state.url\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(_this.props.toggle()).then(function (item) {\n        _this.props.addItemToState(item[0]);\n\n        _this.props.toggle();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.submitFormEdit = function (e) {\n      e.preventDefault();\n      fetch('/service', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: _this.state.name,\n          url: _this.state.url\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(_this.props.toggle()).then(function (item) {\n        console.log(item);\n\n        _this.props.updateState(item[0]);\n\n        _this.props.toggle();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AddEditForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // if item exists, populate the state with proper data\n      if (this.props.item) {\n        var _this$props$item = this.props.item,\n            id = _this$props$item.id,\n            status = _this$props$item.status,\n            name = _this$props$item.name,\n            url = _this$props$item.url,\n            added = _this$props$item.added;\n        this.setState({\n          id: id,\n          status: status,\n          name: name,\n          url: url,\n          added: added\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, {\n        onSubmit: this.props.item ? this.submitFormEdit : this.submitFormAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Input, {\n        type: \"text\",\n        readonly: \"readonly\",\n        name: \"name\",\n        id: \"name\",\n        onChange: this.onChange,\n        value: this.state.name === null ? '' : this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"New URL\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"url\",\n        id: \"url\",\n        onChange: this.onChange,\n        value: this.state.url === null ? '' : this.state.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n  }]);\n\n  return AddEditForm;\n}(React.Component);\n\nexport default AddEditForm;","map":{"version":3,"sources":["/Users/oktaybahceci/Documents/dev/fullstack-code-test/webroot/src/Components/Forms/FormAddEdit.js"],"names":["React","Button","Form","FormGroup","Label","Input","AddEditForm","state","name","url","onChange","e","setState","target","value","submitFormAdd","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","props","toggle","item","addItemToState","catch","err","console","log","submitFormEdit","updateState","id","status","added","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nclass AddEditForm extends React.Component {\n  state = {\n    name: '',\n    url: '',\n  }\n\n  onChange = e => {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  submitFormAdd = e => {\n    e.preventDefault()\n    fetch('/service', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: this.state.name,\n        url: this.state.url,\n      })\n    })\n      .then(response => response.json())\n      .then(this.props.toggle())\n      .then(item => {\n      \tthis.props.addItemToState(item[0])\n      \tthis.props.toggle()\n      })\n      .catch(err => console.log(err))\n  }\n\n  submitFormEdit = e => {\n    e.preventDefault()\n    fetch('/service', {\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: this.state.name,\n        url: this.state.url,\n      })\n    })\n      .then(response => response.json())\n      .then(this.props.toggle())\n      .then(item => {\n      \tconsole.log(item)\n          this.props.updateState(item[0])\n          this.props.toggle()\n      })\n      .catch(err => console.log(err))\n  }\n\n  componentDidMount(){\n    // if item exists, populate the state with proper data\n    if(this.props.item){\n      const { id, status, name, url, added} = this.props.item\n      this.setState({ id, status, name, url, added })\n    }\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.props.item ? this.submitFormEdit : this.submitFormAdd}>\n        <FormGroup>\n          <Label for=\"name\">Name</Label>\n          <Input type=\"text\" readonly=\"readonly\" name=\"name\" id=\"name\" onChange={this.onChange} value={this.state.name === null ? '' : this.state.name}  />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"email\">New URL</Label>\n          <Input type=\"text\" name=\"url\" id=\"url\" onChange={this.onChange} value={this.state.url === null ? '' : this.state.url}  />\n        </FormGroup>\n        <Button>Submit</Button>\n      </Form>\n    );\n  }\n}\n\nexport default AddEditForm\n"]},"metadata":{},"sourceType":"module"}